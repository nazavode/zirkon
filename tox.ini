[tox]
envlist = py34

[testenv]
deps = -r{toxinidir}/requirements/tests.txt
whitelist_externals = mkdir
                      bash
                      sed
                      echo
                      ls
                      cat
        
commands = # cleaning source directories before the run
           {envpython} scripts/clean py:{toxinidir}/daikon:inf py:{toxinidir}/tests:inf py:{toxinidir}:0 data:build data:dist
           # run tests and collect coverage information:
           {envpython} scripts/redirect -o file:{envdir}/tox.coveragerc -e stderr: -- sed {toxinidir}/.coveragerc -e 's%[ ]*directory[ ]*=.*%directory = '{envdir}'/QA/coverage/html%g'
           coverage erase
           py.test --doctest-glob='*.rst' --cov daikon --cov-report=html --cov-config={envdir}/tox.coveragerc tests daikon README.rst docs/source
           # cleaning source directories after the run
           {envpython} scripts/clean py:{toxinidir}/daikon:inf py:{toxinidir}/tests:inf py:{toxinidir}:0 data:build data:dist

[testenv:pylint]
basepython = python3.4
deps = -r{toxinidir}/requirements/pylint.txt
commands = # run pylint:
           {envpython} scripts/redirect -o file:{envdir}/QA/pylint.txt -o stdout: -- {envbindir}/pylint --rcfile pylint.ini daikon

[testenv:flake8]
basepython = python3.4
deps = -r{toxinidir}/requirements/flake8.txt
commands = # run flake8:
           {envpython} scripts/redirect -o file:{envdir}/QA/flake8.txt -o stdout: -- {envbindir}/flake8 --format pylint --config flake8.ini daikon 

[testenv:sphinx]
basepython = python3.4
deps = -r{toxinidir}/requirements/sphinx.txt
commands = # build sphinx documentation:
           sphinx-apidoc --force --separate -o {envdir}/docs/source daikon
           sphinx-build -b html -d {envdir}/docs/_build {envdir}/docs/source {envdir}/docs/

[testenv:coveralls]
setenv =   TRAVIS = true
           CI = true
      
basepython = python3.4
deps =     {[testenv]deps}
           -r{toxinidir}/requirements/coveralls.txt
commands = # cleaning source directories before the run
           {envpython} scripts/clean py:{toxinidir}/daikon:inf py:{toxinidir}/tests:inf py:{toxinidir}:0 data:build data:dist
           # run tests and collect coverage information:
           {envpython} scripts/redirect -o file:{envdir}/tox.coveragerc -e stderr: -- sed {toxinidir}/.coveragerc -e 's%[ ]*directory[ ]*=.*%directory = '{envdir}'/QA/coverage/html%g'
           coverage erase
           py.test -c {toxinidir}/tox.ini --cov daikon --cov-report=html --cov-config={envdir}/tox.coveragerc tests
           # cleaning source directories after the run
           {envpython} scripts/clean py:{toxinidir}/daikon:inf py:{toxinidir}/tests:inf py:{toxinidir}:0 data:build data:dist
           # coveralls
           coveralls --rcfile={envdir}/tox.coveragerc

[pytest]
minversion = 2.5
addopts = -rsf --maxfail=3 -q --doctest-modules --ignore build --ignore dist
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL
#norecursedirs = .tox
